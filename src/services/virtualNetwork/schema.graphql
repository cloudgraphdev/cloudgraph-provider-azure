type azureVirtualNetworkDdosProtectionPlan implements azureBaseResource
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  resourceGuid: String @search(by: [hash, regexp])
  etag: String @search(by: [hash, regexp])
}

type azureVirtualNetwork implements azureResource
  @generate(
    query: { get: true, query: true, aggregate: true }
    mutation: { add: true, delete: false }
  )
  @key(fields: "id") {
  addressSpacePrefixes: [String] @search(by: [hash, regexp])
  dnsServers: [String] @search(by: [hash, regexp])
  ddosProtectionPlans: [azureVirtualNetworkDdosProtectionPlan]
  enableDdosProtection: Boolean @search
  enableVmProtection: Boolean @search
  flowTimeoutInMinutes: Int @search
  provisioningState: String @search(by: [hash, regexp])
  resourceGuid: String @search(by: [hash, regexp])
  appServiceEnvironments: [azureAppServiceEnvironment] @hasInverse(field: virtualNetwork)
  firewalls: [azureFirewall] @hasInverse(field: virtualNetworks)
  lbVirtualNetworkOf: [azureLoadBalancer] @hasInverse(field: loadBalancerBackendVirtualNetworks)
  networkInterfaces: [azureNetworkInterface] @hasInverse(field: virtualNetworks)
  virtualMachines: [azureVirtualMachine] @hasInverse(field: virtualNetworks)
  resourceGroup: [azureResourceGroup] @hasInverse(field: virtualNetworks)
}

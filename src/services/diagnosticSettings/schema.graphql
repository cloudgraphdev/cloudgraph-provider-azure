type azureDiagnosticSettingMetricSettings
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  )
  @key(fields: "id") {
  id: String! @id @search(by: [hash, regexp])
  timeGrain: String @search(by: [hash, regexp])
  category: String @search(by: [hash, regexp])
  enabled: Boolean @search
  retentionPolicyEnabled: Boolean @search
  retentionPolicyDays: Int @search
}

type azureDiagnosticSettingLogs
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  )
  @key(fields: "id") {
  id: String! @id @search(by: [hash, regexp])
  category: String @search(by: [hash, regexp])
  enabled: Boolean @search
  retentionPolicyEnabled: Boolean @search
  retentionPolicyDays: Int @search
}

type azureDiagnosticSetting implements azureBaseResource
  @generate(
    query: { get: true, query: true, aggregate: true }
    mutation: { add: true, delete: false }
  )
  @key(fields: "id") {
  region: String @search(by: [hash, regexp])
  subscriptionId: String @search(by: [hash, regexp])
  storageAccountId: String @search(by: [hash, regexp])
  serviceBusRuleId: String @search(by: [hash, regexp])
  eventHubAuthorizationRuleId: String @search(by: [hash, regexp])
  eventHubName: String @search(by: [hash, regexp])
  metrics: [azureDiagnosticSettingMetricSettings]
  logs: [azureDiagnosticSettingLogs]
  workspaceId: String @search(by: [hash, regexp])
  logAnalyticsDestinationType: String @search(by: [hash, regexp])
  appropiateCategories: Boolean @search
  resourceGroup: [azureResourceGroup] @hasInverse(field: diagnosticSettings)
  storageAccount: [azureStorageAccount] @hasInverse(field: diagnosticSettings)
}

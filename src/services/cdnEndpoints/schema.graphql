type azureCdnGeoFilter {
  id: String! @id @search(by: [hash, regexp])
  relativePath: String @search(by: [hash, regexp])
  action: String @search(by: [hash, regexp])
  countryCodes: [String] @search(by: [hash, regexp])
}

type azureCdnKeyVaultSigningKeyParameters {
  odataType: String @search(by: [hash, regexp])
  subscriptionId: String @search(by: [hash, regexp])
  resourceGroupName: String @search(by: [hash, regexp])
  vaultName: String @search(by: [hash, regexp])
  secretName: String @search(by: [hash, regexp])
  secretVersion: String @search(by: [hash, regexp])
}

type azureCdnUrlSigningKey {
  id: String! @id @search(by: [hash, regexp])
  keySourceParameters: azureCdnKeyVaultSigningKeyParameters
}

type azureCdnDeliveryRuleConditionParameter {
  odataType: String @search(by: [hash, regexp])
  selector: String @search(by: [hash, regexp])
  operator: String @search(by: [hash, regexp])
  negateCondition: Boolean @search
  matchValues: [String] @search(by: [hash, regexp])
  transforms: [String] @search(by: [hash, regexp])
}

type azureCdnDeliveryRuleConditionUnion {
  id: String! @id @search(by: [hash, regexp])
  name: String @search(by: [hash, regexp])
  parameters: azureCdnDeliveryRuleConditionParameter
}

type azureCdnSigningParamIdentifier {
  id: String! @id @search(by: [hash, regexp])
  paramIndicator: String @search(by: [hash, regexp])
  paramName: String @search(by: [hash, regexp])
}

type azureCdnResourceRef {
  id: String! @id @search(by: [hash, regexp])
}

type azureCdnDeliveryRuleActionParameter {
  odataType: String @search(by: [hash, regexp])
  redirectType: String @search(by: [hash, regexp])
  destinationProtocol: String @search(by: [hash, regexp])
  customPath: String @search(by: [hash, regexp])
  customHostname: String @search(by: [hash, regexp])
  customQueryString: String @search(by: [hash, regexp])
  customFragment: String @search(by: [hash, regexp])
  algorithm: String @search(by: [hash, regexp])
  parameterNameOverride: [azureCdnSigningParamIdentifier]
  originGroup: azureCdnResourceRef
  sourcePattern: String @search(by: [hash, regexp])
  destination: String @search(by: [hash, regexp])
  preserveUnmatchedPath: Boolean @search
  headerAction: String @search(by: [hash, regexp])
  headerName: String @search(by: [hash, regexp])
  value: String @search(by: [hash, regexp])
  cacheBehavior: String @search(by: [hash, regexp])
  cacheType: String @search(by: [hash, regexp])
  cacheDuration: String @search(by: [hash, regexp])
  queryStringBehavior: String @search(by: [hash, regexp])
  queryParameters: String @search(by: [hash, regexp])
}

type azureCdnDeliveryRuleActionAutoGeneratedUnion {
  id: String! @id @search(by: [hash, regexp])
  name: String @search(by: [hash, regexp])
  parameters: azureCdnDeliveryRuleActionParameter
}

type azureCdnDeliveryRule {
  id: String! @id @search(by: [hash, regexp])
  name: String @search(by: [hash, regexp])
  order: Int @search
  conditions: [azureCdnDeliveryRuleConditionUnion]
  actions: [azureCdnDeliveryRuleActionAutoGeneratedUnion]
}

type azureCdnEndpointDeliveryPolicy
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  description: String @search(by: [hash, regexp])
  rules: [azureCdnDeliveryRule]
}

type azureCdnEndpoint implements azureResource
  @generate(
    query: { get: true, query: true, aggregate: true }
    mutation: { add: true, delete: false }
  )
  @key(fields: "id") {
  originPath: String @search(by: [hash, regexp])
  contentTypesToCompress: [String] @search(by: [hash, regexp])
  originHostHeader: String @search(by: [hash, regexp])
  isCompressionEnabled: Boolean @search
  isHttpAllowed: Boolean @search
  isHttpsAllowed: Boolean @search
  queryStringCachingBehavior: String @search(by: [hash, regexp])
  optimizationType: String @search(by: [hash, regexp])
  probePath: String @search(by: [hash, regexp])
  geoFilters: [azureCdnGeoFilter]
  defaultOriginGroupId: String @search(by: [hash, regexp])
  urlSigningKeys: [azureCdnUrlSigningKey]
  deliveryPolicy: azureCdnEndpointDeliveryPolicy
  webApplicationFirewallPolicyLinkId: String @search(by: [hash, regexp])
  hostName: String @search(by: [hash, regexp])
  resourceState: String @search(by: [hash, regexp])
  provisioningState: String @search(by: [hash, regexp])
  resourceGroup: [azureResourceGroup] @hasInverse(field: cdnEndpoints)
  cdnProfiles: [azureCdnProfile] @hasInverse(field: cdnEndpoints)
  cdnCustomDomains: [azureCdnCustomDomain] @hasInverse(field: cdnEndpoints)
  cdnOrigins: [azureCdnOrigin] @hasInverse(field: cdnEndpoints)
  cdnOriginGroups: [azureCdnOriginGroup] @hasInverse(field: cdnEndpoints)
}

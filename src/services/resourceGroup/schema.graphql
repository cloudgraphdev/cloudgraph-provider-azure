type azureResourceGroup implements azureResource
  @key(fields: "id")
  @generate(
    query: { get: true, query: true, aggregate: true }
    mutation: { add: true, delete: false }
  ) {
  managedBy: String @search(by: [hash, regexp])
  actionGroups: [azureActionGroup] @hasInverse(field: resourceGroup)
  activityLogAlerts: [azureActivityLogAlert] @hasInverse(field: resourceGroup)
  aksManagedClusters: [azureAksManagedCluster] @hasInverse(field: resourceGroup)
  appInsights: [azureAppInsights] @hasInverse(field: resourceGroup)
  appServiceEnvironments: [azureAppServiceEnvironment] @hasInverse(field: resourceGroup)
  appServicePlans: [azureAppServicePlan] @hasInverse(field: resourceGroup)
  appServiceWebApps: [azureAppServiceWebApp] @hasInverse(field: resourceGroup)
  arcConnectedClusters: [azureArcConnectedCluster] @hasInverse(field: resourceGroup)
  backupInstances: [azureBackupInstance] @hasInverse(field: resourceGroup) 
  backupPolicies: [azureBackupPolicy] @hasInverse(field: resourceGroup)
  cdnCustomDomains: [azureCdnCustomDomain] @hasInverse(field: resourceGroup)
  cdnEndpoints: [azureCdnEndpoint] @hasInverse(field: resourceGroup)
  cdnOriginGroups: [azureCdnOriginGroup] @hasInverse(field: resourceGroup)
  cdnOrigins: [azureCdnOrigin] @hasInverse(field: resourceGroup)
  cdnProfiles: [azureCdnProfile] @hasInverse(field: resourceGroup)
  cognitiveServicesAccounts: [azureCognitiveServicesAccount] @hasInverse(field: resourceGroup)
  containerRegistries: [azureContainerRegistry] @hasInverse(field: resourceGroup)
  cosmosDb: [azureCosmosDb] @hasInverse(field: resourceGroup)
  dataCollectionRules: [azureDataCollectionRule] @hasInverse(field: resourceGroup)
  dataFactories: [azureDataFactory] @hasInverse(field: resourceGroup)
  dataLakeStorageAccount: [azureDataLakeStorageAccount] @hasInverse(field: resourceGroup)
  databaseManagedSqlInstances: [azureDatabaseManagedSqlInstance] @hasInverse(field: resourceGroup)
  databaseMySql: [azureDatabaseMySql] @hasInverse(field: resourceGroup)
  databasePostgreSql: [azureDatabasePostgreSql] @hasInverse(field: resourceGroup)
  databaseSql: [azureDatabaseSql] @hasInverse(field: resourceGroup)
  databaseSqlVm: [azureDatabaseSqlVm] @hasInverse(field: resourceGroup)
  diagnosticSettings: [azureDiagnosticSetting] @hasInverse(field: resourceGroup)
  disks: [azureDisk] @hasInverse(field: resourceGroup)
  dns: [azureDnsZone] @hasInverse(field: resourceGroup)
  eventGrids: [azureEventGrid] @hasInverse(field: resourceGroup)
  eventHubs: [azureEventHub] @hasInverse(field: resourceGroup)
  expressRouteGateways: [azureExpressRouteGateway] @hasInverse(field: resourceGroup)
  fileShares: [azureFileShare] @hasInverse(field: resourceGroup)
  firewalls: [azureFirewall] @hasInverse(field: resourceGroup)
  functionApps: [azureFunctionApp] @hasInverse(field: resourceGroup)
  integrationRuntimes: [azureIntegrationRuntime] @hasInverse(field: resourceGroup)
  keyVaults: [azureKeyVault] @hasInverse(field: resourceGroup)
  loadBalancers: [azureLoadBalancer] @hasInverse(field: resourceGroup)
  logAnalyticsSolutions: [azureLogAnalyticsSolution] @hasInverse(field: resourceGroup)
  logAnalyticsWorkspaces: [azureLogAnalyticsWorkspace] @hasInverse(field: resourceGroup)
  machineLearningWorkspace: [azureMachineLearningWorkspace] @hasInverse(field: resourceGroup)
  metricAlerts: [azureMetricAlert] @hasInverse(field: resourceGroup)
  mySqlServer: [azureMySqlServer] @hasInverse(field: resourceGroup)
  networkInterfaces: [azureNetworkInterface] @hasInverse(field: resourceGroup)
  postgreSqlServer: [azurePostgreSqlServer] @hasInverse(field: resourceGroup)
  privateDns: [azurePrivateDnsZone] @hasInverse(field: resourceGroup)
  publicIps: [azurePublicIp] @hasInverse(field: resourceGroup)
  recoveryVaults: [azureRecoveryVault] @hasInverse(field: resourceGroup)
  recoveryInstances: [azureRecoveryInstance] @hasInverse(field: resourceGroup) 
  recoveryPolicies: [azureRecoveryPolicy] @hasInverse(field: resourceGroup)
  redisCaches: [azureRedisCache] @hasInverse(field: resourceGroup)
  replicationAppliances: [azureReplicationAppliance] @hasInverse(field: resourceGroup)
  replicationCenters: [azureReplicationCenter] @hasInverse(field: resourceGroup)
  replicationNetworks: [azureReplicationNetwork] @hasInverse(field: resourceGroup)
  replicationPolicies: [azureReplicationPolicy] @hasInverse(field: resourceGroup)
  securityGroups: [azureNetworkSecurityGroup] @hasInverse(field: resourceGroup)
  serviceBus: [azureServiceBus] @hasInverse(field: resourceGroup)
  sqlServers: [azureSqlServer] @hasInverse(field: resourceGroup)
  storageAccounts: [azureStorageAccount] @hasInverse(field: resourceGroup)
  storageBlobs: [azureStorageBlob] @hasInverse(field: resourceGroup)
  storageContainers: [azureStorageContainer] @hasInverse(field: resourceGroup)
  synapseBigDataPools: [azureSynapseBigDataPool] @hasInverse(field: resourceGroup)
  synapseSqlPools: [azureSynapseSqlPool] @hasInverse(field: resourceGroup)
  synapseWorkspaces: [azureSynapseWorkspace] @hasInverse(field: resourceGroup)
  trafficManagerProfiles: [azureTrafficManagerProfile] @hasInverse(field: resourceGroup)
  virtualMachineScaleSets: [azureVirtualMachineScaleSet] @hasInverse(field: resourceGroup)
  virtualMachines: [azureVirtualMachine] @hasInverse(field: resourceGroup)
  virtualNetworks: [azureVirtualNetwork] @hasInverse(field: resourceGroup)
}

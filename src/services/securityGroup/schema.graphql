type azureNetworkSecurityGroupApplication implements azureBaseResource
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  provisioningState: String @search(by: [hash, regexp])
  etag: String @search(by: [hash, regexp])
}

type azureNetworkSecurityGroupRule implements azureBaseResource
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  description: String @search(by: [hash, regexp])
  protocol: String @search(by: [hash, regexp])
  sourcePortRange: String @search(by: [hash, regexp])
  destinationPortRange: String @search(by: [hash, regexp])
  sourceAddressPrefix: String @search(by: [hash, regexp])
  sourceAddressPrefixes: [String] @search(by: [hash, regexp])
  sourceApplicationSecurityGroups: [azureNetworkSecurityGroupApplication]
  destinationAddressPrefix: String @search(by: [hash, regexp])
  destinationAddressPrefixes: [String] @search(by: [hash, regexp])
  destinationApplicationSecurityGroups: [azureNetworkSecurityGroupApplication]
  sourcePortRanges: [String] @search(by: [hash, regexp])
  destinationPortRanges: [String] @search(by: [hash, regexp])
  access: String @search(by: [hash, regexp])
  priority: Int @search
  direction: String @search(by: [hash, regexp])
  provisioningState: String @search(by: [hash, regexp])
  name: String @search(by: [hash, regexp])
  etag: String @search(by: [hash, regexp])
  type: String @search(by: [hash, regexp])
}

type azureNetworkWatcherFlowAnalyticsConfiguration
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  enabled: Boolean @search
  workspaceId: String @search(by: [hash, regexp])
  workspaceRegion: String @search(by: [hash, regexp])
  workspaceResourceId: String @search(by: [hash, regexp])
  trafficAnalyticsInterval: Int @search
}

type azureNetworkSecurityGroupFlowLog implements azureResource
  @generate(
    query: { get: true, query: true, aggregate: true }
    mutation: { add: true, delete: false }
    subscription: false
  )
  @key(fields: "id") {
  etag: String @search(by: [hash, regexp])
  targetResourceId: String @search(by: [hash, regexp])
  targetResourceGuid: String @search(by: [hash, regexp])
  storageId: String @search(by: [hash, regexp])
  enabled: Boolean @search
  retentionPolicyDays: Int @search
  retentionPolicyEnabled: Boolean @search
  formatType: String @search(by: [hash, regexp])
  formatVersion: Int @search
  networkWatcherFlowAnalyticsConfiguration: azureNetworkWatcherFlowAnalyticsConfiguration
  provisioningState:  String @search(by: [hash, regexp])
}

type azureNetworkSecurityGroup implements azureResource
  @generate(
    query: { get: true, query: true, aggregate: true }
    mutation: { add: true, delete: false }
  )
  @key(fields: "id") {
  resourceGuid: String @search(by: [hash, regexp])
  provisioningState: String @search(by: [hash, regexp])
  etag: String @search(by: [hash, regexp])
  securityRules: [azureNetworkSecurityGroupRule]
  defaultSecurityRules: [azureNetworkSecurityGroupRule]
  flowLogs: [azureNetworkSecurityGroupFlowLog]
  networkInterfaces: [azureNetworkInterface] @hasInverse(field: securityGroups)
  resourceGroup: [azureResourceGroup] @hasInverse(field: securityGroups)
}
